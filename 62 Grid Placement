<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Grid Placement</title>
  <style>
    body {
      padding: 0;
      margin: 0;
    }

    .container {
      height: 100vh;
      display: grid;
      gap: 3rem;
      grid-template-columns: 1fr 1fr 1.5fr;
      grid-template-rows: 1fr 1fr;
    }

    .item {
      font-size: 5rem;
      color: white;
      font-family: Arial, Helvetica, sans-serif;
      background-color: blueviolet;
      /* TODO: Use Flexbox to align the text to the center horizontally and vertically. 
      See goal1 image.
      */
      display: flex;
      justify-content: center;
      align-items: center;
    }
    .cowboy {
      background-color: #00B9FF;
      grid-column: span 2;
    }

    .astronaut {
      background-color: #03989E;
      order: 1;

      /* TODO: Make the astronaut box look like the goal2 image. */
      grid-column: span 2;

    }
    .book {
      background-color: #E58331;
      /* TODO: Make the book div look like 
      the goal3 image using grid-row. */
      /*grid-area: 1 / 3 / 3 / 4; we can do like this one*/
      grid-row: span 2;
    }
  </style>
</head>

<body>
  <div class="container">
    <div class="item cowboy">ü§†</div>
    <div class="item astronaut">üë®‚ÄçüöÄ</div>
    <div class="item book">üìñ</div>
  </div>
</body>

</html>

/*------------------------------------------------------
4th excercise:

also you can use:
grid-column-start: 1; or grid-column: 1;
grid-column-end: 1; 

grid-column: 4 / 6;
grid-row: 3 / 6;

grid-area: 1 / 1 / 3 / 6;
grid-area: 1 / 4 / 6 / 5;
(and both of them many times),
order: 1;
grid-template-columns: 50% 50%;


grid-template-columns: repeat(8, 12.5%);
or
grid-template-columns: 50px 1fr 1fr 1fr 50px;
or
grid-template: 60% 40%/ 200px;
or
grid-template: 60% / 200px;

and 
grid-template: 1fr 50px/ 20% 80%;
---------------------*/
